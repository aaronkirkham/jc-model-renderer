//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer GlobalConstants
// {
//
//   float4 Globals[95];                // Offset:    0 Size:  1520
//
// }
//
// cbuffer cb6
// {
//
//   float4 m_IndirectionScaleOffset;   // Offset:    0 Size:    16 [unused]
//   float4 m_SSDFScale;                // Offset:   16 Size:    16 [unused]
//   float4 m_HalfTexel_DisplacementAndMaterialMap;// Offset:   32 Size:    16 [unused]
//   float4 m_HalfTexel_NormalMapAndColorMap;// Offset:   48 Size:    16
//   float4 m_MaterialAndDisplacementDimensions;// Offset:   64 Size:    16 [unused]
//   float2 m_PatchPosXZ;               // Offset:   80 Size:     8
//
// }
//
// cbuffer cb7
// {
//
//   float4 m_PatchPackDataXZ[4];       // Offset:    0 Size:    64 [unused]
//   float4 m_PatchPackDataY;           // Offset:   64 Size:    16 [unused]
//   uint m_BaseLod;                    // Offset:   80 Size:     4 [unused]
//   uint m_DiffuseMidDimension;        // Offset:   84 Size:     4
//   uint m_DiffuseHighDimension;       // Offset:   88 Size:     4 [unused]
//
// }
//
// cbuffer cbInstanceConsts
// {
//
//   float4 InstanceConsts[7];          // Offset:    0 Size:   112
//
// }
//
// Resource bind info for ProjectionSlots
// {
//
//   struct SProjectionSlot
//   {
//       
//       uint m_ProjectionIndex;        // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:     4
//
// }
//
// Resource bind info for ShaderRuleSlots
// {
//
//   struct SShaderRuleSlot
//   {
//       
//       float m_Amplitude;             // Offset:    0
//       float m_Offset;                // Offset:    4
//       uint m_TopographyIndex;        // Offset:    8
//       uint m_VariationIndex;         // Offset:   12
//       float2 m_RotationU;            // Offset:   16
//       float2 m_RotationV;            // Offset:   24
//       uint m_RotationIndex;          // Offset:   32
//       float m_SlotBlendFactor;       // Offset:   36
//       float m_NormalDetailBalance;   // Offset:   40
//       float m_TransitionSlot;        // Offset:   44
//       uint m_ProjectionType;         // Offset:   48
//       bool m_VariationInvert;        // Offset:   52
//
//   } $Element;                        // Offset:    0 Size:    56
//
// }
//
// Resource bind info for TerrainMaterialSlots
// {
//
//   struct STerrainMaterialSlot
//   {
//       
//       uint m_ColorAndIndexNear;      // Offset:    0
//       uint m_ColorAndIndexMid;       // Offset:    4
//       uint m_Transmissive_Dampening_ColorInfluence;// Offset:    8
//
//   } $Element;                        // Offset:    0 Size:    12
//
// }
//
// Resource bind info for VariationTable
// {
//
//   struct SVariationSlotTable
//   {
//       
//       float m_Boundary;              // Offset:    0
//       float m_Scale;                 // Offset:    4
//       float m_Bias;                  // Offset:    8
//
//   } $Element;                        // Offset:    0 Size:    12
//
// }
//
// Resource bind info for ProjectionMatrices
// {
//
//   struct SProjectionMatrix
//   {
//       
//       float3 m_UVec;                 // Offset:    0
//       float3 m_VVec;                 // Offset:   12
//
//   } $Element;                        // Offset:    0 Size:    24
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// SamplerStateRegular               sampler      NA          NA             s0      1 
// SamplerStateNormals               sampler      NA          NA             s2      1 
// DetailColorState                  sampler      NA          NA             s3      1 
// SamplerStateDiffuseAnisotropic    sampler      NA          NA             s5      1 
// RainOccluderSampler               sampler      NA          NA             s9      1 
// DiffuseMapMid                     texture  float4     2darray             t0      1 
// NormalMapMid                      texture  float3     2darray             t1      1 
// HeightMapMid                      texture   float     2darray             t2      1 
// VariationMapMid                   texture   float     2darray             t3      1 
// PatchNormals                      texture  float4          2d             t7      1 
// ProjectionSlots                   texture  struct         r/o             t8      1 
// ShaderRuleSlots                   texture  struct         r/o             t9      1 
// TerrainMaterialSlots              texture  struct         r/o            t10      1 
// VariationTable                    texture  struct         r/o            t11      1 
// IndirectionMap                    texture   float          2d            t12      1 
// SSDFAtlas                         texture   float     2darray            t13      1 
// IndexPatch2                       texture    uint          2d            t14      1 
// ProjectionMatrices                texture  struct         r/o            t15      1 
// ColorPatch                        texture  float4          2d            t16      1 
// RainOccluderTexture               texture  float4          2d            t40      1 
// WetnessNoiseTexture               texture  float4          2d            t41      1 
// GlobalConstants                   cbuffer      NA          NA            cb0      1 
// cbInstanceConsts                  cbuffer      NA          NA            cb1      1 
// cb6                               cbuffer      NA          NA            cb6      1 
// cb7                               cbuffer      NA          NA            cb7      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xy  
// TEXCOORD                 2   xyzw        3     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
//
