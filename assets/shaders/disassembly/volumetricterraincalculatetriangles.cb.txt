//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer GlobalConstants
// {
//
//   float4 Globals[49];                // Offset:    0 Size:   784
//
// }
//
// cbuffer cb3
// {
//
//   float4 m_PatchPackDataXZ;          // Offset:    0 Size:    16 [unused]
//   float4 m_PatchPackDataY;           // Offset:   16 Size:    16 [unused]
//   float4 m_DisplacementConstants;    // Offset:   32 Size:    16 [unused]
//   float m_SeaLevel;                  // Offset:   48 Size:     4
//
// }
//
// Resource bind info for patch_meta_data
// {
//
//   struct SPatchMetaData
//   {
//       
//       int m_PatchX;                  // Offset:    0
//       int m_PatchZ;                  // Offset:    4
//       uint m_Index;                  // Offset:    8
//       uint m_NumOfQuads;             // Offset:   12
//
//   } $Element;                        // Offset:    0 Size:    16
//
// }
//
// Resource bind info for quad_meta_data
// {
//
//   struct SQuadMetaData
//   {
//       
//       uint m_QuadBoundingInfo;       // Offset:    0
//       uint m_QuadIndexStart;         // Offset:    4
//       int m_QuadGroupStart;          // Offset:    8
//       int m_MinSAndT;                // Offset:   12
//       int m_LogSize;                 // Offset:   16
//       int m_NumTriangles;            // Offset:   20
//
//   } $Element;                        // Offset:    0 Size:    24
//
// }
//
// Resource bind info for PatchOutputBuffer
// {
//
//   struct SPatchOutputBuffer
//   {
//       
//       int m_PatchX;                  // Offset:    0
//       int m_PatchZ;                  // Offset:    4
//       uint m_PatchIndex;             // Offset:    8
//       uint m_NumOfQuads;             // Offset:   12
//       uint m_TriangleCount;          // Offset:   16
//       uint m_PatchTriangleCount[4];  // Offset:   20
//       uint m_PatchTriangleOffset[4]; // Offset:   36
//       float3 m_LocalCamera;          // Offset:   52
//       float3 m_CameraPos;            // Offset:   64
//
//   } $Element;                        // Offset:    0 Size:    76
//
// }
//
// Resource bind info for TriangelList
// {
//
//   struct STriangleOutputBuffer
//   {
//       
//       uint m_IndexStart;             // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// patch_meta_data                   texture  struct         r/o             t0      1 
// quad_meta_data                    texture  struct         r/o             t1      1 
// PatchOutputBuffer                     UAV  struct         r/w             u2      1 
// TriangelList                          UAV  struct         r/w             u5      1 
// GlobalConstants                   cbuffer      NA          NA            cb0      1 
// cb3                               cbuffer      NA          NA            cb3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
